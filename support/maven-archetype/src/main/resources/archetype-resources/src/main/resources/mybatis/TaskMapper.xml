<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${package}.dao.base.TaskMapper" >
  <resultMap id="BaseResultMap" type="${package}.entity.base.Task" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${symbol_dollar}{criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${symbol_dollar}{criterion.condition} ${symbol_pound}{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${symbol_dollar}{criterion.condition} ${symbol_pound}{criterion.value} and ${symbol_pound}{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${symbol_dollar}{criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    ${symbol_pound}{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${symbol_dollar}{criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${symbol_dollar}{criterion.condition} ${symbol_pound}{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${symbol_dollar}{criterion.condition} ${symbol_pound}{criterion.value} and ${symbol_pound}{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${symbol_dollar}{criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    ${symbol_pound}{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, description, user_id
  </sql>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="${package}.entity.base.TaskCondition" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ttask
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${symbol_dollar}{orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ttask
    where id = ${symbol_pound}{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ttask
    where id = ${symbol_pound}{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByCondition" parameterType="${package}.entity.base.TaskCondition" >
    delete from ttask
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="${package}.entity.base.Task" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ttask (title, description, user_id
      )
    values (${symbol_pound}{title,jdbcType=VARCHAR}, ${symbol_pound}{description,jdbcType=VARCHAR}, ${symbol_pound}{userId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="${package}.entity.base.Task" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ttask
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        ${symbol_pound}{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        ${symbol_pound}{description,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        ${symbol_pound}{userId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByCondition" parameterType="${package}.entity.base.TaskCondition" resultType="java.lang.Integer" >
    select count(*) from ttask
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByConditionSelective" parameterType="map" >
    update ttask
    <set >
      <if test="record.id != null" >
        
      </if>
      <if test="record.title != null" >
        title = ${symbol_pound}{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = ${symbol_pound}{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = ${symbol_pound}{record.userId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByCondition" parameterType="map" >
    update ttask
    set 
      title = ${symbol_pound}{record.title,jdbcType=VARCHAR},
      description = ${symbol_pound}{record.description,jdbcType=VARCHAR},
      user_id = ${symbol_pound}{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="${package}.entity.base.Task" >
    update ttask
    <set >
      <if test="title != null" >
        title = ${symbol_pound}{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = ${symbol_pound}{description,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = ${symbol_pound}{userId,jdbcType=BIGINT},
      </if>
    </set>
    where id = ${symbol_pound}{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="${package}.entity.base.Task" >
    update ttask
    set title = ${symbol_pound}{title,jdbcType=VARCHAR},
      description = ${symbol_pound}{description,jdbcType=VARCHAR},
      user_id = ${symbol_pound}{userId,jdbcType=BIGINT}
    where id = ${symbol_pound}{id,jdbcType=BIGINT}
  </update>
</mapper>